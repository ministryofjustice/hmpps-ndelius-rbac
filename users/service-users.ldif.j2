dn: {{ ldap_config.base_service_users }}
objectclass: javaContainer
objectclass: top

# OASys API client
{% set oasys_username=lookup('aws_ssm', ssm_prefix+'oasys_user', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
{% set oasys_password=lookup('aws_ssm', ssm_prefix+'oasys_user_password', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
dn: cn={{ oasys_username }},{{ ldap_config.base_service_users }}
sn: {{ oasys_username }}
cn: {{ oasys_username }}
userPassword: {{ oasys_password }}
businesscategory: OIBI096
businesscategory: OIBI097
businesscategory: OABI007
businesscategory: RRBI211
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top

# IAPS API client
{% set iaps_username=lookup('aws_ssm', ssm_prefix+'iaps_user', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
{% set iaps_password=lookup('aws_ssm', ssm_prefix+'iaps_user_password', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
dn: cn={{ iaps_username }},{{ ldap_config.base_service_users }}
sn: {{ iaps_username }}
cn: {{ iaps_username }}
userPassword: {{ iaps_password }}
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top
businesscategory: SEBI018
businesscategory: SEBI019
businesscategory: SEBI020
businesscategory: OIBI998
businesscategory: OIBI999
businesscategory: OIBI100
businesscategory: OIBI101
businesscategory: EXBI200
businesscategory: EXBI201
businesscategory: DMBI060
businesscategory: DMBI061
businesscategory: OIBI098
businesscategory: OIBI099
businesscategory: CLBI003
businesscategory: CLBI007
businesscategory: CLBI044
businesscategory: SEBI021

# DSS/OFFLOC import client
{% set dss_username=lookup('aws_ssm', ssm_prefix+'dss_user', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
{% set dss_password=lookup('aws_ssm', ssm_prefix+'dss_user_password', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
dn: cn={{ dss_username }},{{ ldap_config.base_service_users }}
sn: {{ dss_username }}
cn: {{ dss_username }}
userPassword: {{ dss_password }}
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top
businesscategory: DSBI004

# NOMIS Case Notes API client
{% set casenotes_username=lookup('aws_ssm', ssm_prefix+'casenotes_user', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
{% set casenotes_password=lookup('aws_ssm', ssm_prefix+'casenotes_password', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
dn: cn={{ casenotes_username }},{{ ldap_config.base_service_users }}
sn: {{ casenotes_username }}
cn: {{ casenotes_username }}
userPassword: {{ casenotes_password }}
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top

# Approved Premises Tracker API client
{% set aptracker_username=lookup('aws_ssm', ssm_prefix+'aptracker_user', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
{% set aptracker_password=lookup('aws_ssm', ssm_prefix+'aptracker_password', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) %}
dn: cn={{ aptracker_username }},{{ ldap_config.base_service_users }}
sn: {{ aptracker_username }}
cn: {{ aptracker_username }}
userPassword: {{ aptracker_password }}
description: Approved Premises Tracker API
resourceId: NDelius
authorizedGrantType: client_credentials
authorizedGrantType: refresh_token
registeredRedirectUri: /aptracker-api/
objectclass: NDClient
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top

dn: cn=APBT001,{{ aptracker_username }},{{ ldap_config.base_service_users }}
cn: APBT001
aliasedObjectName: cn=APBT001,{{ ldap_config.base_roles }}
objectclass: NDRoleAssociation
objectclass: alias
objectclass: top

dn: cn=APBT002,{{ aptracker_username }},{{ ldap_config.base_service_users }}
cn: APBT002
aliasedObjectName: cn=APBT002,{{ ldap_config.base_roles }}
objectclass: NDRoleAssociation
objectclass: alias
objectclass: top

# Approved Premises Tracker API front-end (error screens)
dn: cn=APTracker-UI,{{ ldap_config.base_service_users }}
sn: APTracker-UI
cn: APTracker-UI
description: Front-end web client for the Approved Premises Tracker API, to support user authentication on the error screens
resourceId: NDelius
authorizedGrantType: authorization_code
authorizedGrantType: refresh_token
registeredRedirectUri: /aptracker-api/errors
objectclass: NDClient
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top

dn: cn=SPGADBT005,APTracker-UI,{{ ldap_config.base_service_users }}
cn: SPGADBT005
aliasedObjectName: cn=SPGADBT005,{{ ldap_config.base_roles }}
objectclass: NDRoleAssociation
objectclass: alias
objectclass: top

# User Management front-end OAuth client
dn: cn=UserManagement-UI,{{ ldap_config.base_service_users }}
sn: UserManagement-UI
cn: UserManagement-UI
description: Front-end web client for the User Management Tool
resourceId: NDelius
authorizedGrantType: authorization_code
authorizedGrantType: refresh_token
registeredRedirectUri: /umt/
objectclass: NDClient
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top

dn: cn=UMBT001,cn=UserManagement-UI,{{ ldap_config.base_service_users }}
objectclass: top
objectclass: alias
objectclass: NDRoleAssociation
cn: UMBT001
aliasedObjectName: cn=UMBT001,{{ ldap_config.base_roles }}

dn: cn=UMBT002,cn=UserManagement-UI,{{ ldap_config.base_service_users }}
objectclass: top
objectclass: alias
objectclass: NDRoleAssociation
cn: UMBT002
aliasedObjectName: cn=UMBT002,{{ ldap_config.base_roles }}

# National Delius client
dn: cn=NDelius,{{ ldap_config.base_service_users }}
cn: NDelius
sn: NDelius
description: National Delius client to support pre-authenticated grant-type
resourceId: NDelius
authorizedGrantType: preauthenticated
authorizedGrantType: refresh_token
objectclass: NDClient
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top

# Password Manager test user, for verifying LDAP connectivity and functionality
dn: cn=pwm-test,{{ ldap_config.base_users }}
cn: pwm-test
sn: pwm-test
userPassword: {{ lookup('aws_ssm', '/'+environment_name+'/'+project_name+'/pwm/pwm/config_password', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) }}
objectclass: pwmUser
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top

# Password Manager admin user
dn: cn=pwm-admin,{{ ldap_config.base_users }}
cn: pwm-admin
sn: pwm-admin
pwmAdmin: TRUE
userPassword: {{ lookup('aws_ssm', '/'+environment_name+'/'+project_name+'/pwm/pwm/config_password', region=region, aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, aws_security_token=aws_security_token) }}
objectclass: pwmUser
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top

# CRC clients to support SPG messaging
{% for user in ['ALF','SPG','C01','C02','C03','C04','C05','C06','C07','C08','C09','C10','C11','C12','C13','C14','C15','C16','C17','C18','C19','C20','C21'] %}
dn: cn={{ user }},{{ ldap_config.base_users }}
cn: {{ user }}
givenname: {{ user }}
sn: {{ user }}
mail: {{ user }}
uid: {{ user }}
userhomearea: {{ user }}
description: CRC {{ user }} system user
usersector: private
objectclass: NDUser
objectclass: inetOrgPerson
objectclass: organizationalPerson
objectclass: person
objectclass: top

dn: cn=SPGBT000,cn={{ user }},{{ ldap_config.base_users }}
aliasedobjectname: cn=SPGBT000,{{ ldap_config.base_roles }}
objectclass: NDRoleAssociation
objectclass: alias
objectclass: top
cn: SPGBT000

dn: cn=SPGBT001,cn={{ user }},{{ ldap_config.base_users }}
aliasedobjectname: cn=SPGBT001,{{ ldap_config.base_roles }}
objectclass: NDRoleAssociation
objectclass: alias
objectclass: top
cn: SPGBT001

dn: cn=SPGBT003,cn={{ user }},{{ ldap_config.base_users }}
aliasedobjectname: cn=SPGBT003,{{ ldap_config.base_roles }}
objectclass: NDRoleAssociation
objectclass: alias
objectclass: top
cn: SPGBT003

dn: cn=SPGBT010,cn={{ user }},{{ ldap_config.base_users }}
aliasedobjectname: cn=SPGBT010,{{ ldap_config.base_roles }}
objectclass: NDRoleAssociation
objectclass: alias
objectclass: top
cn: SPGBT010

dn: cn=SPGBT900,cn={{ user }},{{ ldap_config.base_users }}
aliasedobjectname: cn=SPGBT900,{{ ldap_config.base_roles }}
objectclass: NDRoleAssociation
objectclass: alias
objectclass: top
cn: SPGBT900

{% endfor %}